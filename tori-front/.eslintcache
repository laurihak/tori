[{"/home/lauri/Desktop/programming/tori/tori-front/src/index.js":"1","/home/lauri/Desktop/programming/tori/tori-front/src/App.jsx":"2","/home/lauri/Desktop/programming/tori/tori-front/src/components/Header/Header.jsx":"3","/home/lauri/Desktop/programming/tori/tori-front/src/components/Login/Login.jsx":"4","/home/lauri/Desktop/programming/tori/tori-front/src/components/ProductPage/ProductPage.jsx":"5","/home/lauri/Desktop/programming/tori/tori-front/src/components/InputFile/InputFile.jsx":"6","/home/lauri/Desktop/programming/tori/tori-front/src/components/AddProduct/AddProduct.jsx":"7","/home/lauri/Desktop/programming/tori/tori-front/src/components/ProductList/ProductList.jsx":"8","/home/lauri/Desktop/programming/tori/tori-front/src/components/Searchbar/Searchbar.jsx":"9","/home/lauri/Desktop/programming/tori/tori-front/src/components/ProductList/Product/Product.jsx":"10","/home/lauri/Desktop/programming/tori/tori-front/src/components/AddUser/AddUser.jsx":"11","/home/lauri/Desktop/programming/tori/tori-front/src/components/AddProduct/makedata.js":"12","/home/lauri/Desktop/programming/tori/tori-front/src/services/productService.js":"13"},{"size":219,"mtime":1610539079879,"results":"14","hashOfConfig":"15"},{"size":2405,"mtime":1610536881102,"results":"16","hashOfConfig":"15"},{"size":1774,"mtime":1610454776043,"results":"17","hashOfConfig":"15"},{"size":2701,"mtime":1610454817631,"results":"18","hashOfConfig":"15"},{"size":4640,"mtime":1610450801622,"results":"19","hashOfConfig":"15"},{"size":2608,"mtime":1610452777274,"results":"20","hashOfConfig":"15"},{"size":9043,"mtime":1610454582039,"results":"21","hashOfConfig":"15"},{"size":3706,"mtime":1610535749821,"results":"22","hashOfConfig":"15"},{"size":2617,"mtime":1610545838964,"results":"23","hashOfConfig":"15"},{"size":2394,"mtime":1610443310235,"results":"24","hashOfConfig":"15"},{"size":3837,"mtime":1610201580562,"results":"25","hashOfConfig":"15"},{"size":3217,"mtime":1610363515862,"results":"26","hashOfConfig":"15"},{"size":2112,"mtime":1610534803600,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"2oz70z",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/lauri/Desktop/programming/tori/tori-front/src/index.js",[],["60","61"],"/home/lauri/Desktop/programming/tori/tori-front/src/App.jsx",["62"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Login from \"./components/Login/Login\";\nimport ProductList from \"./components/ProductList/ProductList\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ProductPage from \"./components/ProductPage/ProductPage\";\nimport AddProduct from \"./components/AddProduct/AddProduct\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport InputFile from \"./components/InputFile/InputFile\";\nimport AddUser from \"./components/AddUser/AddUser\";\n\nimport productService from \"./services/productService\";\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [logInfo, setLogInfo] = useState(null);\n  const [searchLocation, setSearchLocation] = useState(\"Kaikki\");\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [searchClick, setSearchClick] = useState(null);\n\n  useEffect(() => {\n    const getCachedUser = async () => {\n      const cachedUser = await localStorage.getItem(\"loggedInUser\");\n      const userJson = JSON.parse(cachedUser);\n      setUser(userJson);\n      if (!userJson) return productService.setToken(null);\n      productService.setToken(userJson.token);\n    };\n    getCachedUser();\n  }, [logInfo]);\n\n  console.log(\"haku lokaatio\", searchLocation);\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header user={user} setLogInfo={setLogInfo}></Header>\n        <Switch>\n          <Route path=\"/products/:id\">\n            <ProductPage></ProductPage>\n          </Route>\n          <Route path=\"/product-list\">\n            <Searchbar\n              searchWord={searchWord}\n              setSearchWord={setSearchWord}\n              setSearchLocation={setSearchLocation}\n              setSearchClick={setSearchClick}\n            ></Searchbar>\n            <ProductList\n              searchWord={searchWord}\n              searchLocation={searchLocation}\n              searchClick={searchClick}\n            ></ProductList>\n          </Route>\n          <Route path=\"/add-product\">\n            <AddProduct user={user}></AddProduct>\n          </Route>\n          <Route path=\"/add-user\">\n            <AddUser></AddUser>\n          </Route>\n          <Route path=\"/login\">\n            <Login setLogInfo={setLogInfo}></Login>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","/home/lauri/Desktop/programming/tori/tori-front/src/components/Header/Header.jsx",[],"/home/lauri/Desktop/programming/tori/tori-front/src/components/Login/Login.jsx",[],"/home/lauri/Desktop/programming/tori/tori-front/src/components/ProductPage/ProductPage.jsx",[],"/home/lauri/Desktop/programming/tori/tori-front/src/components/InputFile/InputFile.jsx",["63"],"import \"./InputFile.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport productService from \"../../services/productService\";\n\nconst InputFile = () => {\n  const [file, setFile] = useState();\n  const { id } = useParams();\n\n  const [images, setImages] = useState([]);\n\n  const urlToImages = `${process.env.REACT_APP_API_URL}/products/${id}/images`;\n\n  const handleChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n  const fileFromServer = require(\"../AddProduct/images/test.jpeg\").default;\n\n  console.log(\"file in change inputfile\", file);\n  console.log(\"file in change but from server\", fileFromServer);\n\n  const uploadPhoto = async (event) => {\n    if (!file) {\n      return;\n    }\n    try {\n      productService.insertImage(id, file);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  useEffect(() => {\n    const getImage = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_API_URL}/products/${id}/images`\n        );\n        if (!response || !response.data.length === 0) return;\n        setImages(response.data);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    getImage();\n  }, [id]);\n\n  console.log(\"images now \", images);\n  return (\n    <div className=\"Container\">\n      <div className=\"Container-add-photo\">\n        <div className=\"Container-preview-photos\">\n          {!images\n            ? null\n            : images.map((img, i) => (\n                <img\n                  key={i}\n                  className=\"Product-photos\"\n                  src={img}\n                  alt=\"not found\"\n                />\n              ))}\n        </div>\n        {!file ? null : (\n          <img\n            className=\"Photo-preview\"\n            src={URL.createObjectURL(file)}\n            alt=\"not found\"\n          />\n        )}\n        <div className=\"button-wrap\">\n          <label className=\"Choose-file-button\" htmlFor=\"upload\">\n            Choose file\n          </label>\n          <input\n            accept=\"image/jpeg\"\n            id=\"upload\"\n            type=\"file\"\n            name=\"file\"\n            onChange={(event) => handleChange(event)}\n          />\n        </div>\n        <label\n          className=\"Upload-photo-button\"\n          onClick={uploadPhoto}\n          accept=\"image/jpeg\"\n          name=\"file\"\n        >\n          Upload\n        </label>\n        <div style={{ marginTop: \"15px\" }}>\n          File name: {!file ? \"not found\" : file.name}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InputFile;\n","/home/lauri/Desktop/programming/tori/tori-front/src/components/AddProduct/AddProduct.jsx",["64","65","66","67"],"import \"./AddProduct.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport productService from \"../../services/productService\";\n\nimport {\n  generateSellerName,\n  generateProductName,\n  generateLocation,\n  generateAddress,\n  generateSellType,\n  generateDescription,\n} from \"./makedata\";\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst InputFile = ({ file, setFile }) => {\n  const { id } = useParams();\n\n  const [images, setImages] = useState([]);\n\n  const urlToImages = `${process.env.REACT_APP_API_URL}/products/${id}/images`;\n\n  const handleChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n  const fileFromServer = require(\"../AddProduct/images/test.jpeg\").default;\n\n  console.log(\"file in change inputfile\", file);\n  console.log(\"file in change but from server\", fileFromServer);\n\n  const uploadPhoto = async (event) => {\n    if (!file) {\n      return;\n    }\n    try {\n      productService.insertImage(id, file);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  useEffect(() => {\n    const getImage = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_API_URL}/products/${id}/images`\n        );\n        if (!response || !response.data.length === 0) return;\n        setImages(response.data);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    getImage();\n  }, [id]);\n\n  console.log(\"images now \", images);\n  return (\n    <div className=\"Container\">\n      <div className=\"Container-add-photo\">\n        <div className=\"Container-preview-photos\">\n          {!images\n            ? null\n            : images.map((img, i) => (\n                <img\n                  key={i}\n                  className=\"Product-photos\"\n                  src={img}\n                  alt=\"not found\"\n                />\n              ))}\n        </div>\n        {!file ? null : (\n          <img\n            className=\"Photo-preview\"\n            src={URL.createObjectURL(file)}\n            alt=\"not found\"\n          />\n        )}\n        <div className=\"button-wrap\">\n          <label className=\"Choose-file-button\" htmlFor=\"upload\">\n            Choose file\n          </label>\n          <input\n            accept=\"image/jpeg\"\n            id=\"upload\"\n            type=\"file\"\n            name=\"file\"\n            onChange={(event) => handleChange(event)}\n          />\n        </div>\n        <label\n          className=\"Upload-photo-button\"\n          onClick={uploadPhoto}\n          accept=\"image/jpeg\"\n          name=\"file\"\n        >\n          Upload\n        </label>\n        <div style={{ marginTop: \"15px\" }}>\n          File name: {!file ? \"not found\" : file.name}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst productSchema = Yup.object().shape({\n  productName: Yup.string(),\n  sellerName: Yup.string(),\n  price: Yup.string(),\n  location: Yup.string(),\n  address: Yup.string(),\n  sellType: Yup.string(),\n  description: Yup.string(),\n});\n\nconst makeData = async (file) => {\n  var i;\n  for (i = 0; i < 100; i++) {\n    const newProduct = {\n      product_name: generateProductName(),\n      seller_name: generateSellerName(),\n      price: Math.floor(Math.random() * 1000 + 1),\n      location: generateLocation(),\n      address: generateAddress(),\n      sell_type: generateSellType(),\n      description: generateDescription(),\n    };\n    const response = await productService.create(newProduct);\n    if (!response) return;\n    const id = response.id;\n    const responseImage = await productService.insertImage(id, file);\n  }\n};\n\nconst locationOptions = [\n  \"Uusimaa\",\n  \"Varsinais-Suomi\",\n  \"Satakunta\",\n  \"Kanta-Häme\",\n  \"Pirkanmaa\",\n  \"Päijät-Häme\",\n  \"Kymenlaakso\",\n  \"Etelä-Karjala\",\n  \"Etelä-Savo\",\n  \"Pohjois-Savo\",\n  \"Pohjois-Karjala\",\n  \"Keski-Suomi\",\n  \"Etelä-Pohjanmaa\",\n  \"Pohjanmaa\",\n  \"Keski-Pohjanmaa\",\n  \"Pohjois-Pohjanmaa\",\n  \"Kainuu\",\n  \"Lappi\",\n  \"Ahvenanmaa\",\n];\n\nconst locationOptionsHtml = locationOptions.sort().map((o, i) => (\n  <option key={i} value={o}>\n    {o}\n  </option>\n));\n\nconst AddProduct = ({ user }) => {\n  const [file, setFile] = useState();\n\n  const history = useHistory();\n\n  const handleSubmit = async ({ values }) => {\n    const response = productService.create(values);\n    const id = response.id;\n    // history.push(`/products/${id}`);\n  };\n  if (!user) {\n    return <div>No user found no authorization to add product</div>;\n  }\n  const seller = user.name;\n\n  const handleMockData = async () => {\n    await makeData(file);\n  };\n  return (\n    <div className=\"Container\">\n      <div className=\"Add-product-container\">\n        <InputFile file={file} setFile={setFile} />\n\n        <Formik\n          initialValues={{\n            product_name: \"\",\n            seller_name: seller,\n            price: \"\",\n            location: \"\",\n            address: \"\",\n            sell_type: \"\",\n            description: \"\",\n          }}\n          validationSchema={productSchema}\n          validateOnBlur={false}\n          validateOnChange={false}\n          onSubmit={(values, { setSubmitting }) => {\n            // event.preventDefault();\n            handleSubmit({ values });\n            setSubmitting(false);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            /* and other goodies */\n          }) => (\n            <form onSubmit={handleSubmit} className=\"Form-product\">\n              <button onClick={handleMockData}> Tee 100 ilmoitusta</button>\n              <div className=\"Input-container-product\">\n                <label>Tuotteen nimi: </label>\n                <input\n                  className=\"Input\"\n                  type=\"string\"\n                  name=\"product_name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.product_name}\n                  placeholder=\"Tuotteen nimi\"\n                />\n              </div>\n\n              <div className=\"Input-container-product\">\n                <label>Myyjan nimi: </label>\n                <input\n                  className=\"Input\"\n                  type=\"string\"\n                  name=\"seller_name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.seller_name}\n                  placeholder=\"Myyjan nimi\"\n                />\n              </div>\n              <div className=\"Input-container-product\">\n                <label>Tuotteen hinta: </label>\n                <input\n                  className=\"Input\"\n                  type=\"string\"\n                  name=\"price\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.price}\n                  placeholder=\"Hinta\"\n                />\n              </div>\n              <div className=\"Input-container-product\">\n                <label>Kaupunki: </label>\n                <select className=\"Input\">{locationOptionsHtml}</select>\n              </div>\n              <div className=\"Input-container-product\">\n                <label>Osoite: </label>\n                <input\n                  className=\"Input\"\n                  type=\"string\"\n                  name=\"address\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.address}\n                  placeholder=\"Osoite\"\n                />\n              </div>\n              <div className=\"Input-container-product\">\n                <label>Myynti tapa: </label>\n                <input\n                  className=\"Input\"\n                  type=\"string\"\n                  name=\"sell_type\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.sell_type}\n                  placeholder=\"Myyntitapa\"\n                />\n              </div>\n              <div className=\"Input-container-product\">\n                <label>Lisatietoja tuotteesta: </label>\n                <textarea\n                  className=\"Input-description\"\n                  type=\"string\"\n                  name=\"description\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.description}\n                  placeholder=\"Lisatietoja\"\n                />\n              </div>\n              <button className=\"Button\" type=\"submit\" disabled={isSubmitting}>\n                Lisaa ilmoitus\n              </button>\n              <div>\n                {errors.product_name &&\n                  touched.product_name &&\n                  errors.product_name}\n              </div>\n              <div>\n                {errors.seller_name &&\n                  touched.seller_name &&\n                  errors.seller_name}\n              </div>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default AddProduct;\n","/home/lauri/Desktop/programming/tori/tori-front/src/components/ProductList/ProductList.jsx",["68","69","70"],"import \"./ProductList.css\";\nimport Product from \"./Product/Product\";\nimport { useEffect, useState } from \"react\";\nimport productService from \"../../services/productService\";\n\nconst Pagination = ({\n  page,\n  setPage,\n  searchWord,\n  searchLocation,\n  searchClick,\n}) => {\n  const [totalItems, setTotalItems] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(20);\n\n  useEffect(() => {\n    const getPages = async () => {\n      console.log(\"getting pages\");\n      const response = await productService.getPages(\n        searchWord,\n        searchLocation\n      );\n      console.log(response);\n      if (response.count) {\n        console.log(\"SETTING RESPONSE COUNT\")\n        setTotalItems(response.count);\n        setTotalPages(parseInt(response.count / itemsPerPage) + 1);\n      }\n    };\n    getPages();\n  }, [searchClick]);\n  const handleMoveNext = () => {\n    if (page === totalPages) return;\n    setPage(page + 1);\n  };\n  const handleMovePrev = () => {\n    if (page > 1) setPage(page - 1);\n    return;\n  };\n  const handleMoveFirst = () => {\n    console.log(\"click on first\");\n    setPage(1);\n  };\n  const handleMoveLast = () => {\n    console.log(\"move to last\");\n    setPage(totalPages);\n  };\n\n  return (\n    <div className=\"Pagination-container\">\n      <div className=\"Pagination-number-container\">\n        <p className=\"Pagination-total-count\">Tuotteiden maara: {totalItems}</p>\n        <p className=\"Pagination-total-count\">Sivumaara: {totalPages}</p>\n      </div>\n      <ul className=\"Pagination\">\n        <li\n          aria-label=\"First\"\n          className={\"Pagination-item\"}\n          onClick={handleMoveFirst}\n        >\n          First\n        </li>\n        <li\n          aria-label=\"Previous\"\n          className={\"Pagination-item\"}\n          onClick={handleMovePrev}\n        >\n          &laquo;\n        </li>\n        <div>\n          <input\n            type=\"text\"\n            value={page}\n            onChange={(e) => setPage(e.target.value)}\n            className=\"Pagination-current-page\"\n          ></input>\n        </div>\n        <li\n          aria-label=\"Next\"\n          className={\"Pagination-item\"}\n          onClick={handleMoveNext}\n        >\n          &raquo;\n        </li>\n        <li\n          aria-label=\"Last\"\n          className={\"Pagination-item\"}\n          onClick={handleMoveLast}\n        >\n          Last\n        </li>\n      </ul>\n    </div>\n  );\n};\nconst ProductList = ({ searchClick, searchWord, searchLocation }) => {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n\n  console.log(\"page in productlist\", page);\n  useEffect(() => {\n    console.log(\"searching now\");\n    const getList = async (e) => {\n      let products;\n      console.log(\"searchquery in \", searchWord);\n      if (!searchWord && searchWord === \"Kaikki\") {\n        products = await productService.getAll();\n      } else {\n        products = await productService.getAll(\n          searchWord,\n          searchLocation,\n          page\n        );\n      }\n      if (!products) {\n        console.log(\"products not found\");\n      }\n      console.log(products);\n      setList(products);\n    };\n    getList();\n  }, [searchClick, page]);\n\n  return (\n    <>\n      <Pagination\n        page={page}\n        setPage={setPage}\n        searchWord={searchWord}\n        searchLocation={searchLocation}\n        searchClick={searchClick}\n      />\n      <div className=\"Container\">\n        {!list ? null : (\n          <div className=\"Containerlist\">\n            {list.map((p) => (\n              <Product product={p} key={p.id} />\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ProductList;\n","/home/lauri/Desktop/programming/tori/tori-front/src/components/Searchbar/Searchbar.jsx",[],"/home/lauri/Desktop/programming/tori/tori-front/src/components/ProductList/Product/Product.jsx",["71"],"import {\n  Card,\n  CardMedia as img,\n  CardContent,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./Product.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    minWidth: 350,\n    flexGrow: 1,\n    borderColor: \"grey\",\n    borderWidth: \"1.1px\",\n    borderRadius: \"5px\",\n    margin: \"10px\",\n    backgroundColor: \"rgb(60,60,60)\",\n  },\n});\n\nconst Product = ({ product }) => {\n  const [images, setImages] = useState(null);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleClick = () => {\n    console.log(\"handling click\");\n    history.push(`/products/${product.id}`);\n  };\n\n  useEffect(() => {\n    console.log(\"useeffetct in product\");\n    const getImages = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_API_URL}/products/${product.id}/images`\n        );\n        if (!response || !response.data.length === 0) return;\n        setImages(response.data);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    getImages();\n  }, [product]);\n  // console.log(\"images now\", images);\n  return (\n    <Card\n      className={classes.root}\n      variant=\"outlined\"\n      key={product.id}\n      onClick={handleClick}\n    >\n      <CardContent className=\"Content\">\n        <div className=\"Column\">\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {product.product_name}\n          </Typography>\n          <Typography className=\"Left-info\">\n            Hinta: {product.price} $\n          </Typography>\n          <Typography className=\"Left-info\" variant=\"body2\" component=\"p\">\n            Paikka: {product.location}\n          </Typography>\n          <Typography className=\"Left-info\" variant=\"body2\" component=\"p\">\n            Tyyppi: {product.sell_type}\n          </Typography>\n          {/* <Typography className=\"Left-info\" variant=\"body2\" component=\"p\">\n            {product.description}\n          </Typography> */}\n        </div>\n        <div className=\"Right\">\n          {!images ? null : (\n            <img className=\"Media\" src={images[0]} title=\"not found\" />\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Product;\n","/home/lauri/Desktop/programming/tori/tori-front/src/components/AddUser/AddUser.jsx",[],"/home/lauri/Desktop/programming/tori/tori-front/src/components/AddProduct/makedata.js",[],"/home/lauri/Desktop/programming/tori/tori-front/src/services/productService.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":17},{"ruleId":"76","severity":1,"message":"80","line":13,"column":9,"nodeType":"78","messageId":"79","endLine":13,"endColumn":20},{"ruleId":"76","severity":1,"message":"80","line":26,"column":9,"nodeType":"78","messageId":"79","endLine":26,"endColumn":20},{"ruleId":"76","severity":1,"message":"81","line":138,"column":11,"nodeType":"78","messageId":"79","endLine":138,"endColumn":24},{"ruleId":"76","severity":1,"message":"82","line":173,"column":9,"nodeType":"78","messageId":"79","endLine":173,"endColumn":16},{"ruleId":"76","severity":1,"message":"83","line":177,"column":11,"nodeType":"78","messageId":"79","endLine":177,"endColumn":13},{"ruleId":"76","severity":1,"message":"84","line":15,"column":24,"nodeType":"78","messageId":"79","endLine":15,"endColumn":39},{"ruleId":"85","severity":1,"message":"86","line":32,"column":6,"nodeType":"87","endLine":32,"endColumn":19,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":123,"column":6,"nodeType":"87","endLine":123,"endColumn":25,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":80,"column":13,"nodeType":"93","endLine":80,"endColumn":72},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'InputFile' is defined but never used.","Identifier","unusedVar","'urlToImages' is assigned a value but never used.","'responseImage' is assigned a value but never used.","'history' is assigned a value but never used.","'id' is assigned a value but never used.","'setItemsPerPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'itemsPerPage', 'searchLocation', and 'searchWord'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotalPages' needs the current value of 'itemsPerPage'.","ArrayExpression",["96"],"React Hook useEffect has missing dependencies: 'searchLocation' and 'searchWord'. Either include them or remove the dependency array.",["97"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [itemsPerPage, searchClick, searchLocation, searchWord]",{"range":"102","text":"103"},"Update the dependencies array to be: [searchClick, page, searchWord, searchLocation]",{"range":"104","text":"105"},[873,886],"[itemsPerPage, searchClick, searchLocation, searchWord]",[3202,3221],"[searchClick, page, searchWord, searchLocation]"]